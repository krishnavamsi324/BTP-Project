sap.ui.define(["sap/ui/core/mvc/ControllerExtension"],function(e){"use strict";return e.extend("task2collegedept.ext.controller.DeptObjectcontroller",{override:{routing:{onBeforeBinding:async function(){console.log("Entered");debugger;if(sap.ushell&&sap.ushell.Container){var e=sap.ushell.Container.getService("UserInfo");var t=e.getEmail();console.log(t);var n=this.base.getExtensionAPI().getModel();if(!n){console.error("Model is not available.");return}var o;if(typeof n.getServiceUrl==="function"){o=n.getServiceUrl();console.log("Service URL:",o)}else{console.error("Unable to determine the service URL.");return}try{const e=await new Promise((e,n)=>{jQuery.ajax({url:o+"access?$filter=userEmail eq '"+encodeURIComponent(t)+"'",method:"GET",dataType:"json",success:function(t){e(t)},error:function(e,t,o){n(new Error(t+": "+o))}})});const n=e.value;const r=await new Promise((e,t)=>{jQuery.ajax({url:o+"/dept?$filter=deptId eq '"+encodeURIComponent(n[0].user)+"'",method:"GET",dataType:"json",success:function(t){e(t)},error:function(e,n,o){t(new Error(n+": "+o))}})});console.log("Department data:",r);console.log("Access data:",e);const s=r.value;debugger;const i=s[0].deptId;debugger;const l=window.location.href;console.log("Current URL:",l);const c=new URL(l);const a=c.hash.substring(1);const u=/\/dept\(deptId='([^']*)'/.exec(a);const d=u?u[1]:null;debugger;if(d!==i){this.getView().findAggregatedObjects(true,function(e){return e.isA("sap.m.Button")}).forEach(function(e){if(e.getId().includes("Delete")){e.setVisible(false)}else if(e.getId().includes("Edit")){e.setVisible(false)}})}else if(d==i){this.getView().findAggregatedObjects(true,function(e){return e.isA("sap.m.Button")}).forEach(function(e){if(e.getId().includes("Delete")){e.setVisible(false)}else if(e.getId().includes("Edit")){e.setVisible(true)}})}}catch(e){console.error("Error fetching data",e)}}else{console.log("UserInfo service not available.")}}},onInit:function(){var e=this.base.getExtensionAPI().getModel()}}})});
//# sourceMappingURL=DeptObjectcontroller.controller.js.map